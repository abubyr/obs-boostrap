#!/bin/bash -x
# If you need to remove some packages from repo, specify them in environment variable PKG_REMOVE_LIST
download_pkgs(){
	wget --directory-prefix="$TEMP_DIR" --reject index.html* --mirror --no-parent -nd $REPO_URL
}
DOWNLOAD_ALL="false"
UBUNTU_DISTRO="precise"
UBUNTU_REPO_COMPONENT="main"
UBUNTU_NONSTANDARD_REPO="false"
while getopts ":u:t:p:a:c:d:v:O:hAX" FLAG; do
	case $FLAG in
		u)
			REPO_URL=$OPTARG
			;;
		t)
			REPO_TYPE=$OPTARG
			;;
		p)
			LOCAL_MIRROR_PATH=$OPTARG
			;;
		a)
			ARCH=$OPTARG
			;;
		O)
			TEMP_DIR=$OPTARG
			;;
		v)
			FUEL_VER=$OPTARG
			;;
		A)
			DOWNLOAD_ALL="true"
			;;
		X)
			UBUNTU_NONSTANDARD_REPO="true"
			;;
		d)
			UBUNTU_DISTRO=$OPTARG
			;;
		c)
			UBUNTU_REPO_COMPONENT=$OPTARG
			;;
		\?)
			echo "Invalid option: -$OPTARG. Use -h for help" >&2
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
		h)
			echo -e "This script is able to create local mirrors of Debian/RPM repositories.\n\nUsage: $(basename $0) -u <source_repo_url> [-A] [-t <repo_type=RPM] [-v <fuel_version=5.1>] [-p <local_mirror_path>] [-a <arch>=x86_64] [-X] [-d <ubuntu_distro>=precise] [-c <ubuntu_repo_component>=main]\
[-O <temp_download_dir>=/data/imports]\n\n \
-u <source_repo_url> 		- Mandatory. URL of repository project connected to. Needed for downloading repo index files.\n \
[-A]				- Optional. If set, all packages will be downloaded.\n \
				  If unset - src rpms and debuginfo rpms/debug debs WON'T be downloaded.\n \
[-X]				- Optional. UBUNTU ONLY. If set, nonstandard Ubuntu repo (without dists/pool directories) is assumed.\n \
				  In this case <source_repo_url> should point to directory with Packages.gz file.\n \
[-v <fuel_version>]     	- Optional. Version of FUEL. Default value: 5.1\n \
[-t <repo_type>]     		- Optional. Choose deb or rpm repo type. Default value: RPM.\n \
[-p <local_mirror_path>]	- Optional. Where to put repository mirror on OBS server.\n \
				  Default values:\n \
				  Ubuntu - /srv/obs/repos/local-fuel-<fuel_version>-ubuntu-deps.\n \
				  CentOS - /srv/obs/repos/local-fuel-<fuel_version>-centos-deps.\n \
[-a <arch>]          		- Optional. Repository architecture. Default value: x86_64.\n \
[-O <temp_download_dir>]	- Optional. Temporary directory for downloading packages. Default value: /data/imports.\n \
				  WARNING: don't run few instances of script with the same temp dir!\n \
[-d <ubuntu_distro>=precise]	- Optional. UBUNTU ONLY: Ubuntu distribution (code name). Default value: precise.\n \
[-c <ubuntu_repo_component>=main]-Optional. UBUNTU ONLY: Ubuntu repo component, e.g. main, universe, multiverse etc. Default value: main.\n \
You can specify list of packages to remove from mirror, providing it in env variable REMOVE_LIST.\n \
For removing unnecessary packages glob *<name>* is used. If you don't want to delete some packages, whose names match to this glob, \
please, specify them in DONT_REMOVE environment variable."
			exit
			;;
	esac
done
shift $((OPTIND-1))
if [[ -z "$REPO_URL" ]]; then
	echo "Invalid usage. You should specify URL for downloading from. Use -h for help" >&2
	exit 1
fi
[[ -z "$REPO_TYPE" ]] && REPO_TYPE="RPM"
[[ -z "$FUEL_VERSION" ]] && FUEL_VERSION=5.1
if [[ -z "$TEMP_DIR" ]]; then
	TEMP_DIR="/data/imports"
	echo -e "You didn't specify full path to destination directory. $TEMP_DIR will be used as default repo location\n"
fi
TEMP_DIR=${TEMP_DIR%/}
REPO_URL=${REPO_URL%/}
if [[ -z "$ARCH" ]]; then
	ARCH="x86_64"
	echo -e "You didn't specify repo arch. $ARCH arch is assumed\n"
fi
if [[ ! -d "$TEMP_DIR" ]]; then
	if ! mkdir -p "$TEMP_DIR"; then echo "Temporary directory wasn't created. Exitting..."; exit 2; fi
else
	rm -rf $TEMP_DIR/*
fi
case "$REPO_TYPE" in
	"RPM"|"rpm")
		[[ -z "$LOCAL_MIRROR_PATH" ]] && LOCAL_MIRROR_PATH="/srv/obs/repos/local-fuel-$FUEL_VERSION-centos-deps"
		if [[ "$DOWNLOAD_ALL" == "false" ]]; then
			download_pkgs() {
				local INDEX_TYPE="primary.xml.gz"
				# determine exact path to primary.xml.gz file in repodata
				local INDEX_URL="$REPO_URL/repodata/$(curl $REPO_URL/repodata/ | grep -o '[0-9a-hA-H-]*primary\.xml\.gz' | uniq)"
				if ! wget -O "$TEMP_DIR"/primary.xml.gz $INDEX_URL; then rm -rf $TEMP_DIR $LOCAL_MIRROR_PATH; echo "Cannot retreive primary.xml.gz. Exitting..."; exit 1; fi
				gunzip "$TEMP_DIR"/primary.xml.gz
				# retreive exact list of links to rpm packages except src.rpm and debuginfo ones
				local RPM_URL_LIST=$(grep ".*<location.*\.rpm" $TEMP_DIR/primary.xml | egrep -v "src.rpm|debuginfo" |  sed -r 's|^.*["']\(.*rpm\)['"].*$|\1|')
				for pkg_url in $RPM_URL_LIST; do
					wget --directory-prefix="$TEMP_DIR" -N $REPO_URL/$pkg_url
				done
			}
		fi
		repo_init () {
			find "$TEMP_DIR" -name "*.rpm" -print0 | xargs -0 mv -t $LOCAL_MIRROR_PATH/$ARCH
			pushd $LOCAL_MIRROR_PATH
			createrepo .
			popd
		}
		REPO_DIR=$ARCH
		DELIM='-'
		;;
	"DEB"|"deb")
		[[ -z "$LOCAL_MIRROR_PATH" ]] && LOCAL_MIRROR_PATH="/srv/obs/repos/local-fuel-$FUEL_VERSION-ubuntu-deps"
		if [[ "$DOWNLOAD_ALL" == "false" ]]; then
			download_pkgs(){
			if [[ "$UBUNTU_NONSTANDARD_REPO" == "false" ]]; then
				local INDEX_URL="$REPO_URL/dists/$UBUNTU_DISTRO/$UBUNTU_REPO_COMPONENT/binary-$(echo $ARCH | sed 's|^x86_64$|amd64|;s|^x86$|i386|')/Packages.gz"
			else
				local INDEX_URL=$REPO_URL/Packages.gz
			fi
			if ! wget -O "$TEMP_DIR"/Packages.gz $INDEX_URL; then rm -rf $TEMP_DIR $LOCAL_MIRROR_PATH; echo "Cannot retreive Packages.gz. Exitting..."; exit 1; fi
			gunzip "$TEMP_DIR"/Packages.gz
			# download all debs except dbg packages
			local DEB_URL_LIST=$(grep Filename: $TEMP_DIR/Packages | grep -v "^.*dbg.*deb" | awk -F 'Filename: *' '{print $2}')
			for pkg_url in $DEB_URL_LIST; do
				wget --directory-prefix="$TEMP_DIR" -N $REPO_URL/$pkg_url
			done
			}
		fi
		repo_init () {
			local dist=precise
			export REPREPRO_BASE_DIR=$LOCAL_MIRROR_PATH/reprepro
			if [ -d $REPREPRO_BASE_DIR ]; then
		  		mkdir -p $REPREPRO_BASE_DIR/conf
		        	cat > $REPREPRO_BASE_DIR/conf/distributions <<EOF
Origin: Mirantis
Label: Mirantis FUEL
Suite: unstable
Codename: $UBUNTU_DISTRO
Version: $FUEL_VERSION
Architectures: amd64 source i386
Components: $UBUNTU_REPO_COMPONENT
Description: FUEL packages for Ubuntu 12.04 Precise Pangolin
UDebComponents: $UBUNTU_REPO_COMPONENT
Contents: . .gz .bz2
EOF
	   		fi
			for i in $(find $TEMP_DIR -name \*deb) ; do reprepro includedeb $dist $i; done
	    		for i in $(find $TEMP_DIR -name \*udeb) ; do reprepro includeudeb $dist $i; done
		}
		REPO_DIR='reprepro'
		DELIM='_'
		;;
	*)
		echo "Invalid package_type. Should be either RPM or DEB"
		exit 1
		;;
esac

if [[ ! -d "$LOCAL_MIRROR_PATH" ]]; then
	if ! mkdir -p "$LOCAL_MIRROR_PATH"/"$REPO_DIR"; then echo "Local mirror directory wasn't created. Exitting..."; exit 2; fi
else
	rm -rf $LOCAL_MIRROR_PATH/*
	mkdir -p "$LOCAL_MIRROR_PATH"/"$REPO_DIR"
fi

#WGET_CUT_DIRS="$(echo $REPO_URL |sed  "s,[a-zA-Z0-9]*://,,;s,\/, ,g" | wc -w)"
download_pkgs
# Don't remove packages from DONT_REMOVE list. Move them to repo dir for avoiding deletion by shell glob (see below)
if [[ -n "$REMOVE_LIST" ]]; then
	if [[ -n "$DONT_REMOVE" ]]; then
		mkdir -p $TEMP_DIR/dont_rem_dir
		for pkg in $DONT_REMOVE
		do
			mv $TEMP_DIR/$pkg$DELIM[0-9]* $TEMP_DIR/dont_rem_dir/
		done
	fi
	# Remove openstack and fuel packages which will be built on OBS server
	for i in $REMOVE_LIST
	do
		rm -rf "$TEMP_DIR"/*$i*
	done
	if [[ -d $TEMP_DIR/dont_rem_dir ]]; then
		ls -A $TEMP_DIR/dont_rem_dir >/dev/null 2>&1 && mv $TEMP_DIR/dont_rem_dir/* $TEMP_DIR
		rm -rf $TEMP_DIR/dont_rem_dir
	fi
fi
repo_init
if grep obsrun /etc/passwd; then
	chown -R obsrun:obsrun $LOCAL_MIRROR_PATH
fi
rm -rf $TEMP_DIR
