#!/bin/bash -x
# ENV variables:
# OBS_SOURCE   - OBS server API URL to copy from (source)
# OBS_DEST     - OBS server API URL to copy to (destination)
# PRJ - project for copy
# PKG_LIST - list of packages to copy from project PRJ on OBS_SOURCE server
# for copying all packages, set
# PKG_LIST=$(osc -A $OBS_SOURCE ls $PRJ)
if [[ -z "$OBS_SOURCE" ]]; then
	echo -e "Invalid usage.\nSet up environment variable OBS_SOURCE, which should contain OBS server API URL to copy from (source)!"
	exit 1
fi
if [[ -z "$OBS_DEST" ]]; then
	echo -e "Invalid usage.\nSet up environment variable OBS_DEST, which should contain OBS server API URL to copy to (destination)!"
	exit 1
fi
if [[ -z "$PRJ" ]]; then
	echo -e "Invalid usage.\nSet up environment variable PRJ - name of project for copying"
	exit 1
fi
if [[ -z "$PKG_LIST" ]]; then
	echo -e "Invalid usage.\nSet up environment variable PKG_LIST - list of packages to copy from project PRJ on OBS_SOURCE server"
	exit 1
fi
echo -e "######################################\n
Link to source OBS (OBS_SOURCE) = $OBS_SOURCE. Link to destination OBS (OBS_DEST) = $OBS_DEST. Project to copy (PRJ) = $PRJ\n
######################################\n"

# copy prj and prjconf of source project
echo "Copying project $PRJ ..."
osc -A $OBS_SOURCE meta prj $PRJ > $PRJ.prj
osc -A $OBS_SOURCE meta prjconf $PRJ > $PRJ.prjconf
# create project on destination OBS
if ! osc -A $OBS_DEST meta prj -F $PRJ.prj $PRJ; then 
	echo "Project wasn't created. Exitting..."
	rm -f $PRJ.{prj,prjconf}
	exit 1
fi
osc -A $OBS_DEST meta prjconf -F $PRJ.prjconf $PRJ
# remove temporary files with project configs
rm -f $PRJ.{prj,prjconf}
# copy packages from one project to another using osc copypac command
for pkg in $PKG_LIST; do
	echo "Copying package $pkg from project $PRJ"
	osc -A $OBS_SOURCE copypac -t $OBS_DEST $PRJ $pkg $PRJ
	# copy package metadata
	osc -A $OBS_SOURCE meta pkg $PRJ $pkg > $pkg.pkg
	# set up pkg meta
	osc -A $OBS_DEST meta pkg -F $pkg.pkg $PRJ $pkg
	# clean temporary file
	rm -f $pkg.pkg
done
